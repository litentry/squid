enum SubstrateNetwork {
  kusama
  polkadot
  phala
  moonbeam
}

enum SubstrateDemocracyProposalStatus {
    proposed,
    cancelled,
    tabled
}

enum SubstrateTreasuryProposalStatus {
    proposed,
    approved,
    awarded,
    rejected
}

enum SubstrateDemocracyReferendaStatus {
  started,
  passed,
  notPassed,
  cancelled,
  executed
}

type SubstrateGovernanceAccount @entity {
  "address"
  id: ID!
  "hex address"
  publicKey: String! @index
  network: SubstrateNetwork!
  "Deprecated in favour of totalDemocracyProposalSeconds"
  totalProposalSeconds: Int!
  totalDemocracyProposalSeconds: Int!
  "Deprecated in favour of totalDemocracyReferendaVotes - includes both normal proposal votes and votes as a council member from council.vote()"
  totalProposalVotes: Int!
  totalDemocracyReferendaVotes: Int!
  totalElectionVotes: Int!
  totalDemocracyProposals: Int!
  totalCouncilProposals: Int!
  totalTechnicalCommitteeProposals: Int!
  totalBountyProposals: Int!
  totalTreasurySpendProposals: Int!
  councilVotes: [SubstrateCouncilVote]! @derivedFrom(field: "account")
  proposalVotes: [SubstrateProposalVote]! @derivedFrom(field: "account")
  democracyReferendaVotes: [SubstrateDemocracyReferendaVote]! @derivedFrom(field: "account")
  democracyProposalSeconds: [SubstrateDemocracyProposalSecond]! @derivedFrom(field: "account")
  democracyProposals: [SubstrateDemocracyProposal]! @derivedFrom(field: "account")
  councilProposals: [SubstrateCouncilProposal]! @derivedFrom(field: "account")
  technicalCommitteeProposals: [SubstrateTechnicalCommitteeProposal]! @derivedFrom(field: "account")
  electionVotes: [SubstrateElectionVote]! @derivedFrom(field: "account")
  bountyProposals: [SubstrateBountyProposal]! @derivedFrom(field: "account")
  treasurySpendProposals: [SubstrateTreasuryProposal]! @derivedFrom(field: "account")
  phragmenElectionMemberTerms: [SubstratePhragmenElectionMemberTerm]! @derivedFrom(field: "account")
}

type SubstrateElectionVote @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  candidates: [String!]!
  amount: BigInt!
}

type SubstrateDemocracyProposal @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  proposalHash: String! @index
  proposalIndex: Int! @index
  title: String
  description: String
  depositAmount: BigInt!
  status: SubstrateDemocracyProposalStatus!
  updatedAt: DateTime!
  tabledAtBlock: BigInt @index
  preimage: SubstrateDemocracyPreimage
  democracyReferenda: SubstrateDemocracyReferenda
  seconds: [SubstrateDemocracyProposalSecond]! @derivedFrom(field: "proposal")
}

type SubstrateDemocracyReferenda @entity {
  "network:referendaIndex"
  id: ID!
  network: SubstrateNetwork!
  democracyProposal: SubstrateDemocracyProposal
  blockNumber: BigInt!
  date: DateTime!
  title: String,
  description: String,
  status: SubstrateDemocracyReferendaStatus!
  updatedAt: DateTime!
  voteThreshold: String!
  aye: BigInt!
  nay: BigInt!
  votes: [SubstrateDemocracyReferendaVote]! @derivedFrom(field: "democracyReferenda")
}

type SubstrateCouncilProposal @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  lastUpdate: DateTime!
  proposalId: Int @index
  proposalIndex: Int @index
  proposalHash: String! @index
  pallet: String
  method: String
  status: String!
  ayeCount: Int!
  nayCount: Int!
  votes: [SubstrateCouncilVote]! @derivedFrom(field: "proposal")
  threshold: Int!
}

type SubstrateTechnicalCommitteeProposal @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  proposalIndex: Int! @index
  proposalHash: String!
  threshold: Int!
}

type SubstrateCouncilVote @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  proposalIndex: Int! @index
  proposal: SubstrateCouncilProposal!
  approve: Boolean!
}

type SubstrateProposalVote @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  refIndex: Int! @index
  "not sure how to interpret this properly yet so using JSON.stringify() and saving raw"
  vote: String!
}

type SubstrateDemocracyReferendaVote @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  democracyReferenda: SubstrateDemocracyReferenda!
  aye: BigInt!
  nay: BigInt!
}

type SubstrateDemocracyProposalSecond @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  proposal: SubstrateDemocracyProposal!
  upperBound: Int
}

type SubstrateBountyProposal @entity {
  "network:block:index"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  proposalIndex: Int! @index
  description: String
  value: BigInt
}

type SubstrateTreasuryProposal @entity {
  "network:proposalIndex"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  publicKey: String! @index
  blockNumber: BigInt!
  date: DateTime!
  title: String
  description: String
  proposalIndex: Int! @index
  status: SubstrateTreasuryProposalStatus
  councilMotionDate: DateTime
  beneficiary: String
  beneficiaryAccount: SubstrateGovernanceAccount
  value: BigInt!
}

type SubstrateDemocracyPreimage @entity {
  "network:preimageHash"
  id: ID!
  network: SubstrateNetwork!
  account: SubstrateGovernanceAccount!
  blockNumber: BigInt!
  section: String!
  method: String!
  date: DateTime!
  balance: BigInt!
}

type SubstratePhragmenElectionMemberTerm  @entity {
  "network:block:eventIndex:memberIndex"
  id: ID!
  network: SubstrateNetwork!
  blockNumber: BigInt!
  date: DateTime!
  isCurrentTerm: Boolean! @index
  account: SubstrateGovernanceAccount!
  backing: BigInt!
}